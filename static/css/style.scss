/* For annoying layout stuffs */

@mixin text-crop($line-height: 1.3,
    $top-adjustment: 0px,
    $bottom-adjustment: 0px) {
    // Configured in Step 1
    $top-crop: 9;
    $bottom-crop: 9;
    $crop-font-size: 36;
    $crop-line-height: 1.2;

    // Apply values to calculate em-based margins that work with any font size
    $dynamic-top-crop: max(($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)),
            0) / $crop-font-size;
    $dynamic-bottom-crop: max(($bottom-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)),
            0) / $crop-font-size;

    // Mixin output
    line-height: $line-height;

    &::before,
    &::after {
        content: "";
        display: block;
        height: 0;
        width: 0;
    }

    &::before {
        margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
    }

    &::after {
        margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
    }
}

// Mixin generated at: http://text-crop.eightshapes.com/?typeface-selection=custom-font&typeface=Seymour%20One&custom-typeface-name=Shantell%20Sans&custom-typeface-url=&custom-typeface-weight=400&custom-typeface-style=normal&weight-and-style=regular&size=36&line-height=1.2&top-crop=9&bottom-crop=9

/* Usage Examples
    .my-level-1-heading-class {
        @include text-crop; // Will use default line height of 1.3
        font-size: 48px;
        margin: 0 0 0 16px;
    }

    .my-level-2-heading-class {
        @include text-crop; // Will use default line height of 1.3
        font-size: 32px; // Don't need to change any settings, will work with any font size automatically
        margin: 0 0 0 16px;
    }

    .my-body-copy-class {
        @include text-crop($line-height: 2); // Larger line height desired, set the line height via the mixin
        font-size: 16px;
    }

    // Sometimes depending on the font-size, the rendering, the browser, etc. you may need to tweak the output.
    // You can adjust the top and bottom cropping when invoking the component using the $top-adjustment and $bottom-adjustment settings

    .slight-adjustment-needed {
        @include text-crop($top-adjustment: -0.5px, $bottom-adjustment: 2px);
        font-size: 17px;
    }

    .dont-do-this {
        @include text-crop;
        font-size: 16px;
        line-height: 3; // DO NOT set line height outside of the mixin, the mixin needs the line height value to calculate the crop correctly
    }
*/

@mixin ruled_background($line-height) {

    $rule-color: light-dark(#abced4, #c86363);

    /* https://projects.verou.me/css3patterns/#lined-paper */
    background-color: light-dark(white, black);
    background-image:
        linear-gradient(90deg,
            transparent var(--rule-start),
            $rule-color var(--rule-start),
            $rule-color calc(var(--rule-start) + 2px),
            transparent calc(var(--rule-start) + 2px)),
        linear-gradient(light-dark(#eee, #333) 0.1em, transparent 0.1em);
    background-size: 100% $line-height;
}

article {
    display: flex;
    flex-direction: column;
}

.card-head {
    height: 3.9rem;
    --rule-start: 2rem;
    --text-start: 0.3rem;

    @include ruled_background(2.6rem);

    padding-top: 1.3rem;

    .headercontainer {
        margin-left: calc(var(--text-start) + var(--rule-start));
        gap: 0.5em;

        button {
            padding: 0;
            border: 0;
            background: 0;

            @include text-crop;
            font-size: 32px;
            margin: -2px 0 0 0;

            text-decoration: underline;
        }

        button:not([active]) {
            color: gray;
            font-style: italic;
        }
    }

    h1 {
        @include text-crop;
        font-size: 32px;
        margin: -2px 0 0 0;
    }


    .headercontainer {
        display: inline-flex;
    }

    .firstheading {
        display: inline;
    }

    .otherheading {
        font-weight: 700;
        color: light-dark(darkslateblue, #a498f0);
        font-style: italic;
        text-decoration: underline;
        cursor: pointer;
    }
}

.card {
    position: relative;
    --rule-start: 2rem;
    --text-start: 0.3rem;

    @include ruled_background(21px);

    height: 42px;

    p {
        margin: 0;
    }

    p {
        @include text-crop;
        font-size: 16px;
    }

    li,
    label,
    form.addtodo button {
        font-size: 16px;
        margin: 2px 0 -2px 0;
    }

    button {
        cursor: pointer;
    }

    p,
    form.addtodo {
        display: flex;
        flex-direction: row;
        margin: 0;
        margin-left: calc(var(--text-start) + var(--rule-start));
        margin-top: 2px;
        align-items: baseline;
        gap: 0.5rem;
    }

    autowidth-input {
        font-size: 16px;
        min-width: 5.8ch;
        max-width: 17ch;
        margin: 2px 0 -2px;
    }

    button,
    input,
    form:not(.addtodo) {
        margin: 0;
        padding: 0;
        border: 0;
        background: 0;
    }

    input::placeholder {
        color: light-dark(gray, lightgray);
    }

}

.card-body {
    $my-text-nudge: 17px;
    $my-line-height: 21px;

    --rule-start: 2rem;
    --text-start: 0.3rem;
    @include ruled_background(100%);
    background-repeat: no-repeat;

    padding-top: calc($my-line-height - $my-text-nudge);
    padding-bottom: calc($my-text-nudge);


    ul {
        margin: 0;
        display: flex;
        flex-direction: column;
        padding: 0;

        .list-item {

            position: relative;

            &:after {
                content: '◦';
                position: absolute;
                left: 18px;
                top: -3px;
            }

            @include ruled_background($my-line-height);
            background-position: 0px $my-text-nudge;

            display: block;

            // li:before {
            //     content: '• ';
            //     position: absolute;
            // }

            li {
                position: relative;
                list-style-type: none;

                padding-inline-start: calc(var(--text-start) + var(--rule-start));
                word-break: normal;
                overflow-wrap: anywhere;

                button,
                details {
                    color: light-dark(gray, lightgray);
                    font-size: 10pt;
                    font-weight: lighter;
                }

                button,
                input,
                form:not(.addtodo) {
                    margin: 0;
                    padding: 0;
                    border: 0;
                    background: 0;
                }

                details {

                    /* Current bug on stable firefox, fixed on nightly. */
                    /* Revert in 2027 or something */
                    /* REPRODUCE: ff macOS 140.0.2 (aarch64) */
                    /* <3 */
                    @supports (-moz-appearance:none) {
                        & {
                            display: ruby !important;
                        }
                    }

                    display: inline-flex;
                    flex-direction: row;
                    gap: 0.5rem;
                }

                summary {
                    cursor: pointer;
                    display: inline;
                }

                details[open] summary:after {
                    content: ":";
                }
            }
        }

    }
}

.card-head,
.card,
.card-body {

    &,
    input,
    button {
        /**/
        font-family: "Shantell Sans", cursive;
        font-optical-sizing: auto;
        font-weight: 400;
        font-style: normal;
        font-variation-settings:
            "BNCE" 0,
            "INFM" 0,
            "SPAC" 0;

        font-synthesis: none;
    }

    select,
    button {
        color: light-dark(black, white);
    }

}